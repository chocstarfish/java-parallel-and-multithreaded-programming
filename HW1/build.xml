<?xml version="1.0" encoding="UTF-8"?>
<project name="java-parallel-and-multithreaded-programming" default="all">


    <property file="build.properties"/>
    <!-- Uncomment the following property if no tests compilation is needed -->
    <!--
    <property name="skip.tests" value="true"/>
     -->

    <!-- Compiler options -->

    <property name="compiler.debug" value="on"/>
    <property name="compiler.generate.no.warnings" value="off"/>
    <property name="compiler.args" value=""/>
    <property name="compiler.max.memory" value="700m"/>
    <patternset id="ignored.files">
        <exclude name="**/*.hprof/**"/>
        <exclude name="**/*.pyc/**"/>
        <exclude name="**/*.pyo/**"/>
        <exclude name="**/*.rbc/**"/>
        <exclude name="**/*~/**"/>
        <exclude name="**/.DS_Store/**"/>
        <exclude name="**/.bundle/**"/>
        <exclude name="**/.git/**"/>
        <exclude name="**/.hg/**"/>
        <exclude name="**/.svn/**"/>
        <exclude name="**/.tox/**"/>
        <exclude name="**/CVS/**"/>
        <exclude name="**/RCS/**"/>
        <exclude name="**/SCCS/**"/>
        <exclude name="**/__pycache__/**"/>
        <exclude name="**/_svn/**"/>
        <exclude name="**/rcs/**"/>
    </patternset>
    <patternset id="library.patterns">
        <include name="*.war"/>
        <include name="*.ear"/>
        <include name="*.apk"/>
        <include name="*.zip"/>
        <include name="*.swc"/>
        <include name="*.ane"/>
        <include name="*.egg"/>
        <include name="*.jar"/>
    </patternset>
    <patternset id="compiler.resources">
        <exclude name="**/?*.java"/>
        <exclude name="**/?*.form"/>
        <exclude name="**/?*.class"/>
        <exclude name="**/?*.groovy"/>
        <exclude name="**/?*.scala"/>
        <exclude name="**/?*.flex"/>
        <exclude name="**/?*.kt"/>
        <exclude name="**/?*.clj"/>
    </patternset>


    <!-- Project Libraries -->

    <path id="library.hamcrest-core-1.3.classpath">
        <pathelement location="${basedir}/lib/hamcrest-core-1.3.jar"/>
        <pathelement location="${basedir}/lib/junit-4.12.jar"/>
    </path>


    <!-- Global Libraries -->


    <!-- Application Server Libraries -->

    <!-- Modules -->


    <!-- Module java-parallel-and-multithreaded-programming -->

    <dirname property="module.java-parallel-and-multithreaded-programming.basedir" file="${ant.file}"/>


    <property name="compiler.args.java-parallel-and-multithreaded-programming"
              value="-encoding UTF-8 -source 8 ${compiler.args}"/>

    <property name="java-parallel-and-multithreaded-programming.output.dir"
              value="${module.java-parallel-and-multithreaded-programming.basedir}/out/production/java-parallel-and-multithreaded-programming"/>
    <property name="java-parallel-and-multithreaded-programming.testoutput.dir"
              value="${module.java-parallel-and-multithreaded-programming.basedir}/out/test/java-parallel-and-multithreaded-programming"/>

    <path id="java-parallel-and-multithreaded-programming.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="java-parallel-and-multithreaded-programming.module.production.classpath">
        <path refid="library.hamcrest-core-1.3.classpath"/>
    </path>

    <path id="java-parallel-and-multithreaded-programming.runtime.production.module.classpath">
        <pathelement location="${java-parallel-and-multithreaded-programming.output.dir}"/>
        <path refid="library.hamcrest-core-1.3.classpath"/>
    </path>

    <path id="java-parallel-and-multithreaded-programming.module.classpath">
        <pathelement location="${java-parallel-and-multithreaded-programming.output.dir}"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
        <path refid="library.hamcrest-core-1.3.classpath"/>
    </path>

    <path id="java-parallel-and-multithreaded-programming.runtime.module.classpath">
        <pathelement location="${java-parallel-and-multithreaded-programming.testoutput.dir}"/>
        <pathelement location="${java-parallel-and-multithreaded-programming.output.dir}"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/junit-4.12.jar"/>
        <path refid="library.hamcrest-core-1.3.classpath"/>
    </path>


    <patternset id="excluded.from.module.java-parallel-and-multithreaded-programming">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.java-parallel-and-multithreaded-programming">
        <patternset refid="excluded.from.module.java-parallel-and-multithreaded-programming"/>
    </patternset>

    <path id="java-parallel-and-multithreaded-programming.module.sourcepath">
        <dirset dir="${module.java-parallel-and-multithreaded-programming.basedir}">
            <include name="src"/>
        </dirset>
    </path>

    <path id="java-parallel-and-multithreaded-programming.module.test.sourcepath">
        <dirset dir="${module.java-parallel-and-multithreaded-programming.basedir}">
            <include name="test"/>
        </dirset>
    </path>


    <target name="compile.module.java-parallel-and-multithreaded-programming"
            depends="compile.module.java-parallel-and-multithreaded-programming.production,compile.module.java-parallel-and-multithreaded-programming.tests"
            description="Compile module java-parallel-and-multithreaded-programming"/>

    <target name="compile.module.java-parallel-and-multithreaded-programming.production"
            description="Compile module java-parallel-and-multithreaded-programming; production classes">
        <mkdir dir="${java-parallel-and-multithreaded-programming.output.dir}"/>
        <javac destdir="${java-parallel-and-multithreaded-programming.output.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.java-parallel-and-multithreaded-programming}"/>
            <bootclasspath refid="java-parallel-and-multithreaded-programming.module.bootclasspath"/>
            <classpath refid="java-parallel-and-multithreaded-programming.module.production.classpath"/>
            <src refid="java-parallel-and-multithreaded-programming.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.java-parallel-and-multithreaded-programming"/>
        </javac>

        <copy todir="${java-parallel-and-multithreaded-programming.output.dir}">
            <fileset dir="${module.java-parallel-and-multithreaded-programming.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.java-parallel-and-multithreaded-programming.tests"
            depends="compile.module.java-parallel-and-multithreaded-programming.production"
            description="compile module java-parallel-and-multithreaded-programming; test classes" unless="skip.tests">
        <mkdir dir="${java-parallel-and-multithreaded-programming.testoutput.dir}"/>
        <javac destdir="${java-parallel-and-multithreaded-programming.testoutput.dir}" debug="${compiler.debug}"
               nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
            <compilerarg line="${compiler.args.java-parallel-and-multithreaded-programming}"/>
            <bootclasspath refid="java-parallel-and-multithreaded-programming.module.bootclasspath"/>
            <classpath refid="java-parallel-and-multithreaded-programming.module.classpath"/>
            <src refid="java-parallel-and-multithreaded-programming.module.test.sourcepath"/>
            <patternset refid="excluded.from.compilation.java-parallel-and-multithreaded-programming"/>
        </javac>

        <copy todir="${java-parallel-and-multithreaded-programming.testoutput.dir}">
            <fileset dir="${module.java-parallel-and-multithreaded-programming.basedir}/test">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="clean.module.java-parallel-and-multithreaded-programming" description="cleanup module">
        <delete dir="${java-parallel-and-multithreaded-programming.output.dir}"/>
        <delete dir="${java-parallel-and-multithreaded-programming.testoutput.dir}"/>
    </target>

    <target name="init" description="Build initialization">
        <!-- Perform any build initialization in this target -->
    </target>

    <target name="clean" depends="clean.module.java-parallel-and-multithreaded-programming" description="cleanup all"/>

    <target name="build.modules" depends="init, clean, compile.module.java-parallel-and-multithreaded-programming"
            description="build all modules"/>
    <target name="junit-test" description="run all junit tests"
            depends="compile.module.java-parallel-and-multithreaded-programming.tests">
        <!-- Debug output
                <property name="test.class.path" refid="test.class.path"/>
                <echo message="${test.class.path}"/>
        -->
        <junit printsummary="yes" haltonfailure="${haltonfailure}" showoutput="true">
            <classpath refid="java-parallel-and-multithreaded-programming.runtime.module.classpath"/>
            <formatter type="xml"/>
            <batchtest fork="yes" todir="${java-parallel-and-multithreaded-programming.testoutput.dir}">
                <fileset dir="${basedir}/test">
                    <include name="**/*Test.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    <target name="all" depends="junit-test" description="Test"/>
</project>